<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Frontend on Typical personal blog</title>
    <link>https://benetis.me/old/tags/frontend/</link>
    <description>Recent content in Frontend on Typical personal blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; All rights reserved</copyright>
    <lastBuildDate>Sun, 14 May 2017 23:00:24 +0200</lastBuildDate>
    
	<atom:link href="https://benetis.me/old/tags/frontend/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Let&#39;s code: CRUD in Angular with unit tests</title>
      <link>https://benetis.me/old/posts/angular-advanced-crud/</link>
      <pubDate>Sun, 14 May 2017 23:00:24 +0200</pubDate>
      
      <guid>https://benetis.me/old/posts/angular-advanced-crud/</guid>
      <description>Introduction CRUD application we are going to implement will have some additional complexity you might expect:
 import/export data save/load chunks data lazy data processing pagination tests  This project&amp;rsquo;s source code is in github - https://github.com/benetis/angular-advanced-crud
p.s some of code parts are not in sync going down - so I advise to also fork github repo and check code yourself
Requirements &amp;amp; Task itself Aside of the stuff we mentioned above - we obviously will be implementing CRUD operations.</description>
    </item>
    
    <item>
      <title>Let&#39;s code: Authentication in Angular #2 : Auth service</title>
      <link>https://benetis.me/old/posts/angular-authentication-oauth/</link>
      <pubDate>Wed, 10 May 2017 23:00:24 +0200</pubDate>
      
      <guid>https://benetis.me/old/posts/angular-authentication-oauth/</guid>
      <description>Introduction This is part two of Authentication in Angular series. This one is about building authentication part to handle OAuth calls for us. You can find first post here: https://benetis.me/old/posts/angular-authentication/
We will be using redux with our angular project to help us handle side effects. https://github.com/ngrx/store
Our setup - angular-cli 1.0 + Angular4 (Angular 4.1)
Aims  After user clicks login - we need to call OAuth endpoint to get access and refresh tokens which we will store in local storage Show errors for user We want to store tokens in our redux store so they are easily accessible and can be added as headers to our api requests  Login Ah, the login.</description>
    </item>
    
    <item>
      <title>Let&#39;s code: Authentication in Angular #1 - creating login form</title>
      <link>https://benetis.me/old/posts/angular-authentication/</link>
      <pubDate>Mon, 24 Apr 2017 19:40:24 +0200</pubDate>
      
      <guid>https://benetis.me/old/posts/angular-authentication/</guid>
      <description>Introduction Login form - a gate though which user logs into application. If it is working well - you don&amp;rsquo;t notice it - if it is bad - it will always annoy you. Of course it is not only UX/UI problem - there are security implications on server side also. But we will keep these concerns beyond this post scope.
We will have few blog posts on authenticating Angular application.</description>
    </item>
    
    <item>
      <title>Creating shopping cart with product list in Angular2</title>
      <link>https://benetis.me/old/posts/creating-shopping-cart-with-product-list-in-angular2/</link>
      <pubDate>Sat, 11 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/creating-shopping-cart-with-product-list-in-angular2/</guid>
      <description>Introduction A common scenario - you want a product list with &amp;ldquo;Add to cart&amp;rdquo; functionality. Angular can do that - let&amp;rsquo;s see how effective it is.
You can find code in this repository - github
Goal 1. Product list with images, color filter, names and currency. We want to create something similar that H&amp;amp;M has.
2. Details of item
3. Shopping cart view
To view the details and remove items from it.</description>
    </item>
    
    <item>
      <title>HTML5 Canvas. Fundamentals</title>
      <link>https://benetis.me/old/posts/html5-canvas-fundamentals/</link>
      <pubDate>Sun, 15 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/html5-canvas-fundamentals/</guid>
      <description>Introduction Today I met HTML5 Canvas. Not in real world - but during one the exercises from Javascript30. What are those &amp;ldquo;canvas&amp;rdquo;?
Basics Canvas is a HTML element used to draw graphics on fly via Javascript - [0]. Main idea is that you have this rectangle box on the page without any content and you use javascript to draw stuff on it. You do drawing by interacting with context object not the actual canvas object.</description>
    </item>
    
    <item>
      <title>A quick view at CSS Variables (Custom properties)</title>
      <link>https://benetis.me/old/posts/css-variables-custom-properties-a-short-glimpse-2/</link>
      <pubDate>Sun, 18 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/css-variables-custom-properties-a-short-glimpse-2/</guid>
      <description>Introduction For quite some time we had variables in CSS with the help of SASS/LESS. Variables are useful, but they come with a drawback - you cannot use them in runtime. Well that time has ended - CSS variables are landing in new browsers.
[screen taken - 2016-12-20, you can view up to date table here here]
Caniuse table shows that major browsers aside Edge already support
Syntax :root { --header-color: #06c; } #foo h1 { color: var(--header-color); }  example taken from [0]</description>
    </item>
    
    <item>
      <title>Vanilla Javascript challenge</title>
      <link>https://benetis.me/old/posts/vanilla-javascript-challenge/</link>
      <pubDate>Sat, 10 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/vanilla-javascript-challenge/</guid>
      <description>Challenge Today while reading dev news I came across a 30 days Vanilla JS challenge. Idea is simple - there are 30 &amp;ldquo;tasks&amp;rdquo; you need to complete. The catch? You cannot use any libraries, compilers (lodash, jquery, react, typescript, angular..). In other words - we can only use vanilla js.
In my humble opinion this a great way to practice javascript. We are using tons of libraries, precompilers, postcompilers .</description>
    </item>
    
    <item>
      <title>Angular 2 is cool. So is Typescript</title>
      <link>https://benetis.me/old/posts/angular2-is-cool-so-is-typescript/</link>
      <pubDate>Thu, 24 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/angular2-is-cool-so-is-typescript/</guid>
      <description>Introduction Angular framework for building applications. Let&amp;rsquo;s do a review over its important parts.
Language of choice - Typescript Angular was written in Typescript. As for Dart - Typescript was easily transpiled to Dart and that is how Dart version was maintained. It&amp;rsquo;s just that Typescript code required some things for Dart version to work. At some point (this summer) - Angular team decided to split Angular Dart project to a separate one for better or worse.</description>
    </item>
    
    <item>
      <title>Let&#39;s code: Creating functional table with Angular</title>
      <link>https://benetis.me/old/posts/angular-table/</link>
      <pubDate>Sun, 06 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/angular-table/</guid>
      <description>Offtopic Currently volunteering in organisation called &amp;ldquo;Erasmus student Network Lithuania&amp;rdquo;. Working with a team to develop internal HR system.
Intro Looking at the requirement - there is a need to display data. A list of users. And some actions which can be done with each of the user. Table is a good way to make data look good.
Let&amp;rsquo;s try to design how could this table look.
Basic requirements  Table might need to display hundreds of records - pagination No need for selecting rows There will be action buttons in each row to interact with user Inline editing Should look nice (we don&amp;rsquo;t really care about design, just nice is enough) Filtering Sorting  Attempt #1 Using bootstrap - just the markup with some *ngFor magic.</description>
    </item>
    
    <item>
      <title>Quick glimpse at world of Elm</title>
      <link>https://benetis.me/old/posts/quick-glimpse-at-world-of-elm/</link>
      <pubDate>Tue, 01 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/quick-glimpse-at-world-of-elm/</guid>
      <description>Intro Recently I have came across a thing called Elm. It is a functional programming language dedicated to frontend.
About language itself  Functional language You will not have to worry about state mutations No runtime errors. I&amp;rsquo;ll just leave that here Friendly and helpful community. Go to slack, try talking - not only you will get your answers - but community will make you feel part of it Simplicity.</description>
    </item>
    
  </channel>
</rss>