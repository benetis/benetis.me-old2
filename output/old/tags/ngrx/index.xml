<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ngrx on Typical personal blog</title>
    <link>https://benetis.me/tags/ngrx/</link>
    <description>Recent content in Ngrx on Typical personal blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; All rights reserved</copyright>
    <lastBuildDate>Wed, 10 May 2017 23:00:24 +0200</lastBuildDate>
    
	<atom:link href="https://benetis.me/tags/ngrx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Let&#39;s code: Authentication in Angular #2 : Auth service</title>
      <link>https://benetis.me/old/posts/angular-authentication-oauth/</link>
      <pubDate>Wed, 10 May 2017 23:00:24 +0200</pubDate>
      
      <guid>https://benetis.me/old/posts/angular-authentication-oauth/</guid>
      <description>Introduction This is part two of Authentication in Angular series. This one is about building authentication part to handle OAuth calls for us. You can find first post here: https://benetis.me/old/posts/angular-authentication/
We will be using redux with our angular project to help us handle side effects. https://github.com/ngrx/store
Our setup - angular-cli 1.0 + Angular4 (Angular 4.1)
Aims  After user clicks login - we need to call OAuth endpoint to get access and refresh tokens which we will store in local storage Show errors for user We want to store tokens in our redux store so they are easily accessible and can be added as headers to our api requests  Login Ah, the login.</description>
    </item>
    
  </channel>
</rss>