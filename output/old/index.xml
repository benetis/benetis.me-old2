<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Typical personal blog</title>
    <link>https://benetis.me/</link>
    <description>Recent content on Typical personal blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; All rights reserved</copyright>
    <lastBuildDate>Sat, 25 Nov 2017 20:58:35 +0200</lastBuildDate>
    
	<atom:link href="https://benetis.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Shutdown. Time off for brains</title>
      <link>https://benetis.me/old/posts/shutdown-time-off/</link>
      <pubDate>Sat, 25 Nov 2017 20:58:35 +0200</pubDate>
      
      <guid>https://benetis.me/old/posts/shutdown-time-off/</guid>
      <description>Introduction You may have heard advice suggesting to take time off for your brains. Sounds reasonable, but what are the benefits?
Backstory Recently I have been working all the time, either on TravelTimePlatform or my university courses. Some free time? Great - let&amp;rsquo;s debug that Naive Bayes issue I have.
Shutdown Working a lot made me very focused on those things, I started to make mistakes and not feel productive/positive.</description>
    </item>
    
    <item>
      <title>Real estate ads scraping with Scala and Akka - Proof of concept</title>
      <link>https://benetis.me/old/posts/real-estate-prices/</link>
      <pubDate>Sun, 06 Aug 2017 18:54:24 +0200</pubDate>
      
      <guid>https://benetis.me/old/posts/real-estate-prices/</guid>
      <description>Introduction Disclaimer: Not an expert in scala world - any feedback is appreciated.
A question came to mind - can I crawl through a real estate website, gather some data and infer something from that data. This is also becoming relevant and interesting to me.
What experience I want to get doing this side project:
 Data scraping (common problems, &amp;hellip;) Concurrency while analyzing, gathering data (Akka Aktors) Data analysis, statistical inference (Knowing what to query and what results mean) Data visualization (how to display data in a meaningful way) DevOps experience (long running app: deploy, updates, backups, &amp;hellip;)  Planning phase How I imagine this little spider would work:</description>
    </item>
    
    <item>
      <title>Let&#39;s code: CRUD in Angular with unit tests</title>
      <link>https://benetis.me/old/posts/angular-advanced-crud/</link>
      <pubDate>Sun, 14 May 2017 23:00:24 +0200</pubDate>
      
      <guid>https://benetis.me/old/posts/angular-advanced-crud/</guid>
      <description>Introduction CRUD application we are going to implement will have some additional complexity you might expect:
 import/export data save/load chunks data lazy data processing pagination tests  This project&amp;rsquo;s source code is in github - https://github.com/benetis/angular-advanced-crud
p.s some of code parts are not in sync going down - so I advise to also fork github repo and check code yourself
Requirements &amp;amp; Task itself Aside of the stuff we mentioned above - we obviously will be implementing CRUD operations.</description>
    </item>
    
    <item>
      <title>Let&#39;s code: Authentication in Angular #2 : Auth service</title>
      <link>https://benetis.me/old/posts/angular-authentication-oauth/</link>
      <pubDate>Wed, 10 May 2017 23:00:24 +0200</pubDate>
      
      <guid>https://benetis.me/old/posts/angular-authentication-oauth/</guid>
      <description>Introduction This is part two of Authentication in Angular series. This one is about building authentication part to handle OAuth calls for us. You can find first post here: https://benetis.me/old/posts/angular-authentication/
We will be using redux with our angular project to help us handle side effects. https://github.com/ngrx/store
Our setup - angular-cli 1.0 + Angular4 (Angular 4.1)
Aims  After user clicks login - we need to call OAuth endpoint to get access and refresh tokens which we will store in local storage Show errors for user We want to store tokens in our redux store so they are easily accessible and can be added as headers to our api requests  Login Ah, the login.</description>
    </item>
    
    <item>
      <title>Let&#39;s code: Authentication in Angular #1 - creating login form</title>
      <link>https://benetis.me/old/posts/angular-authentication/</link>
      <pubDate>Mon, 24 Apr 2017 19:40:24 +0200</pubDate>
      
      <guid>https://benetis.me/old/posts/angular-authentication/</guid>
      <description>Introduction Login form - a gate though which user logs into application. If it is working well - you don&amp;rsquo;t notice it - if it is bad - it will always annoy you. Of course it is not only UX/UI problem - there are security implications on server side also. But we will keep these concerns beyond this post scope.
We will have few blog posts on authenticating Angular application.</description>
    </item>
    
    <item>
      <title>How to contact me. Waiting for your feedback!</title>
      <link>https://benetis.me/old/posts/contact-me/</link>
      <pubDate>Sat, 22 Apr 2017 18:54:24 +0200</pubDate>
      
      <guid>https://benetis.me/old/posts/contact-me/</guid>
      <description>Contacts and feedback Feedback is important for everyone. I am no exception. Ping me if something is off. Or you just want to say hi. You can email me at: Another way to suggest changes to blog content is to open issue here. You can add: paragraphs, comments, fixes, quotes - anything! Community contribution more than welcome. https://github.com/benetis/benetis.me/issues
Thanks in advance!
Zygimantas Benetis</description>
    </item>
    
    <item>
      <title>Becoming the one with flexbox: Intro to handling the monster</title>
      <link>https://benetis.me/old/posts/taming-flexbox-intro-to-handling-the-monster-2/</link>
      <pubDate>Tue, 21 Feb 2017 21:43:46 +0200</pubDate>
      
      <guid>https://benetis.me/old/posts/taming-flexbox-intro-to-handling-the-monster-2/</guid>
      <description>Learn more about it. But why? Flexbox is becoming one of core concepts in CSS. Might as well get to know more about it. It&amp;rsquo;s always a good investment to know basics well. We will keep this as short as possible. No unneeded content, pictures and etc. Reading whole post should give you basics of it.
What is flexbox? Also known as &amp;ldquo;Flexible box&amp;rdquo; is layout mode in CSS. Main purpose of it is to be predictable when coding responsive layouts [1].</description>
    </item>
    
    <item>
      <title>Creating shopping cart with product list in Angular2</title>
      <link>https://benetis.me/old/posts/creating-shopping-cart-with-product-list-in-angular2/</link>
      <pubDate>Sat, 11 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/creating-shopping-cart-with-product-list-in-angular2/</guid>
      <description>Introduction A common scenario - you want a product list with &amp;ldquo;Add to cart&amp;rdquo; functionality. Angular can do that - let&amp;rsquo;s see how effective it is.
You can find code in this repository - github
Goal 1. Product list with images, color filter, names and currency. We want to create something similar that H&amp;amp;M has.
2. Details of item
3. Shopping cart view
To view the details and remove items from it.</description>
    </item>
    
    <item>
      <title>HTML5 Canvas. Fundamentals</title>
      <link>https://benetis.me/old/posts/html5-canvas-fundamentals/</link>
      <pubDate>Sun, 15 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/html5-canvas-fundamentals/</guid>
      <description>Introduction Today I met HTML5 Canvas. Not in real world - but during one the exercises from Javascript30. What are those &amp;ldquo;canvas&amp;rdquo;?
Basics Canvas is a HTML element used to draw graphics on fly via Javascript - [0]. Main idea is that you have this rectangle box on the page without any content and you use javascript to draw stuff on it. You do drawing by interacting with context object not the actual canvas object.</description>
    </item>
    
    <item>
      <title>2016-2017. Review and planning</title>
      <link>https://benetis.me/old/posts/2016-2017-review-and-planning/</link>
      <pubDate>Tue, 27 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/2016-2017-review-and-planning/</guid>
      <description>Introduction 2016 was a great year for me - a little bit chaotic too. (If you didn&amp;rsquo;t know - I love chaos). Especially the first half. The important thing - learned a ton and enjoyed the year to the fullest.
Review of 2016 First half First half of year I spent with the ESN (organisation I still volunteer in). Kinda miss the experience, but you know what they say - I am happy it happened.</description>
    </item>
    
    <item>
      <title>A quick view at CSS Variables (Custom properties)</title>
      <link>https://benetis.me/old/posts/css-variables-custom-properties-a-short-glimpse-2/</link>
      <pubDate>Sun, 18 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/css-variables-custom-properties-a-short-glimpse-2/</guid>
      <description>Introduction For quite some time we had variables in CSS with the help of SASS/LESS. Variables are useful, but they come with a drawback - you cannot use them in runtime. Well that time has ended - CSS variables are landing in new browsers.
[screen taken - 2016-12-20, you can view up to date table here here]
Caniuse table shows that major browsers aside Edge already support
Syntax :root { --header-color: #06c; } #foo h1 { color: var(--header-color); }  example taken from [0]</description>
    </item>
    
    <item>
      <title>Vanilla Javascript challenge</title>
      <link>https://benetis.me/old/posts/vanilla-javascript-challenge/</link>
      <pubDate>Sat, 10 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/vanilla-javascript-challenge/</guid>
      <description>Challenge Today while reading dev news I came across a 30 days Vanilla JS challenge. Idea is simple - there are 30 &amp;ldquo;tasks&amp;rdquo; you need to complete. The catch? You cannot use any libraries, compilers (lodash, jquery, react, typescript, angular..). In other words - we can only use vanilla js.
In my humble opinion this a great way to practice javascript. We are using tons of libraries, precompilers, postcompilers .</description>
    </item>
    
    <item>
      <title>Let&#39;s code: Learning Haskell #1</title>
      <link>https://benetis.me/old/posts/lets-code-learning-haskell-1/</link>
      <pubDate>Sun, 04 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/lets-code-learning-haskell-1/</guid>
      <description>Introduction Last week has been very immutable for me. I was looking into redux, Elm, React - just the ideas and trying to implement something similar for Angular.
For few years I have had a keen interest into functional programming and considered myself a good in the field. You know - using higher order functions, understand why null is evil - so code produced by me was &amp;ldquo;fairly&amp;rdquo; functional. Avoiding state, writing functions as pure as possible.</description>
    </item>
    
    <item>
      <title>Angular 2 is cool. So is Typescript</title>
      <link>https://benetis.me/old/posts/angular2-is-cool-so-is-typescript/</link>
      <pubDate>Thu, 24 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/angular2-is-cool-so-is-typescript/</guid>
      <description>Introduction Angular framework for building applications. Let&amp;rsquo;s do a review over its important parts.
Language of choice - Typescript Angular was written in Typescript. As for Dart - Typescript was easily transpiled to Dart and that is how Dart version was maintained. It&amp;rsquo;s just that Typescript code required some things for Dart version to work. At some point (this summer) - Angular team decided to split Angular Dart project to a separate one for better or worse.</description>
    </item>
    
    <item>
      <title>Beginner tips: Use functions to your advantage</title>
      <link>https://benetis.me/old/posts/use-functions-to-your-advantage/</link>
      <pubDate>Sat, 12 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/use-functions-to-your-advantage/</guid>
      <description>Intro Looking on how to write better code? One way to do that would be to use functions more than variables. You want to define some variable which returns some data? Define it as a function!
Example Let&amp;rsquo;s say we columns array:
public columns: Array&amp;lt;Column&amp;gt; = [ { title: &#39;Name&#39;, name: &#39;name&#39;, sort: &#39;desc&#39;, type: &#39;text&#39; }, { title: &#39;Surname&#39;, name: &#39;surname&#39;, type: &#39;text&#39; }, { title: &#39;Section&#39;, name: &#39;section&#39;, type: &#39;select&#39;, data: this.</description>
    </item>
    
    <item>
      <title>Let&#39;s code: Creating functional table with Angular</title>
      <link>https://benetis.me/old/posts/angular-table/</link>
      <pubDate>Sun, 06 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/angular-table/</guid>
      <description>Offtopic Currently volunteering in organisation called &amp;ldquo;Erasmus student Network Lithuania&amp;rdquo;. Working with a team to develop internal HR system.
Intro Looking at the requirement - there is a need to display data. A list of users. And some actions which can be done with each of the user. Table is a good way to make data look good.
Let&amp;rsquo;s try to design how could this table look.
Basic requirements  Table might need to display hundreds of records - pagination No need for selecting rows There will be action buttons in each row to interact with user Inline editing Should look nice (we don&amp;rsquo;t really care about design, just nice is enough) Filtering Sorting  Attempt #1 Using bootstrap - just the markup with some *ngFor magic.</description>
    </item>
    
    <item>
      <title>Quick glimpse at world of Elm</title>
      <link>https://benetis.me/old/posts/quick-glimpse-at-world-of-elm/</link>
      <pubDate>Tue, 01 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://benetis.me/old/posts/quick-glimpse-at-world-of-elm/</guid>
      <description>Intro Recently I have came across a thing called Elm. It is a functional programming language dedicated to frontend.
About language itself  Functional language You will not have to worry about state mutations No runtime errors. I&amp;rsquo;ll just leave that here Friendly and helpful community. Go to slack, try talking - not only you will get your answers - but community will make you feel part of it Simplicity.</description>
    </item>
    
  </channel>
</rss>